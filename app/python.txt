print('Hello, world!')
x = 10
y = 20
def add(a, b): return a + b
result = add(5, 10)
if x > 5: print('x is greater than 5')
for i in range(10): print(i)
while x > 0: x -= 1
class Person: def __init__(self, name): self.name = name
person = Person('Alice')
try: raise ValueError('An error') except ValueError as e: print(e)
arr = [1, 2, 3]
print([num * 2 for num in arr])
import os; print(os.getcwd())
import sys; print(sys.version)
with open('file.txt', 'r') as f: print(f.read())
import json; print(json.dumps({'name': 'Alice'}))
import requests; response = requests.get('https://api.example.com')
import threading; t = threading.Thread(target=lambda: print('Thread'))
from collections import Counter; print(Counter([1,2,2,3]))
def async_func(): import asyncio; asyncio.run(main())
import numpy as np; arr = np.array([1, 2, 3])
import pandas as pd; df = pd.DataFrame({'a': [1, 2, 3]})
import flask; app = flask.Flask(__name__)
pip install requests
pip freeze
python -m venv env
source env/bin/activate
deactivate
pytest
black .
flake8 .
mypy script.py
docker build -t my-app .
docker run -p 5000:5000 my-app
heroku create
git init
git push origin main
conda create -n myenv python=3.9
conda activate myenv
python manage.py runserver
jupyter notebook
print('Hello, world!')
x = 10
y = 20
def add(a, b): return a + b
result = add(5, 10)
if x > 5: print('x is greater than 5')
for i in range(10): print(i)
while x > 0: x -= 1
class Person: def __init__(self, name): self.name = name
person = Person('Alice')
try: raise ValueError('An error') except ValueError as e: print(e)
arr = [1, 2, 3]
print([num * 2 for num in arr])
import os; print(os.getcwd())
import sys; print(sys.version)
with open('file.txt', 'r') as f: print(f.read())
import json; print(json.dumps({'name': 'Alice'}))
import requests; response = requests.get('https://api.example.com')
import threading; t = threading.Thread(target=lambda: print('Thread'))
from collections import Counter; print(Counter([1,2,2,3]))
def async_func(): import asyncio; asyncio.run(main())
import numpy as np; arr = np.array([1, 2, 3])
import pandas as pd; df = pd.DataFrame({'a': [1, 2, 3]})
import flask; app = flask.Flask(__name__)
pip install requests
pip freeze
python -m venv env
source env/bin/activate
deactivate
pytest
black .
flake8 .
mypy script.py
docker build -t my-app .
docker run -p 5000:5000 my-app
heroku create
git init
git push origin main
conda create -n myenv python=3.9
conda activate myenv
python manage.py runserver
jupyter notebook
print('Hello, world!')
x = 10
y = 20
def add(a, b): return a + b
result = add(5, 10)
if x > 5: print('x is greater than 5')
for i in range(10): print(i)
while x > 0: x -= 1
class Person: def __init__(self, name): self.name = name
person = Person('Alice')
try: raise ValueError('An error') except ValueError as e: print(e)
arr = [1, 2, 3]
print([num * 2 for num in arr])
import os; print(os.getcwd())
import sys; print(sys.version)
with open('file.txt', 'r') as f: print(f.read())
