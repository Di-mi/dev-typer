console.log('Hello, world!');
let x = 10;
const y = 20;
var z = 30;
function add(a, b) { return a + b; }
const multiply = (a, b) => a * b;
if (x > 5) { console.log('x is greater than 5'); }
for (let i = 0; i < 10; i++) { console.log(i); }
while (x > 0) { x--; }
do { x++; } while (x < 10);
class Person { constructor(name) { this.name = name; } }
const person = new Person('Alice');
try { throw new Error('Something went wrong'); } catch (e) { console.error(e); }
const arr = [1, 2, 3];
arr.forEach(num => console.log(num));
const obj = { name: 'John', age: 25 };
Object.keys(obj).forEach(key => console.log(key));
Object.values(obj).forEach(value => console.log(value));
fetch('https://api.example.com/data').then(response => response.json()).then(data => console.log(data));
async function fetchData() { let response = await fetch('https://api.example.com'); return await response.json(); }
localStorage.setItem('key', 'value');
sessionStorage.setItem('key', 'value');
document.getElementById('myElement');
document.querySelector('.myClass');
document.createElement('div');
window.addEventListener('resize', () => console.log('Resized'));
setTimeout(() => console.log('Delayed execution'), 1000);
setInterval(() => console.log('Repeated execution'), 1000);
clearTimeout(myTimeout);
clearInterval(myInterval);
JSON.parse('{"name":"Alice"}');
JSON.stringify({ name: 'Alice' });
Array.from(document.querySelectorAll('div'));
[1, 2, 3].map(num => num * 2);
[1, 2, 3].filter(num => num > 1);
[1, 2, 3].reduce((acc, num) => acc + num, 0);
[1, 2, 3].find(num => num === 2);
[1, 2, 3].includes(2);
Math.random();
Math.floor(4.7);
Math.ceil(4.3);
Math.round(4.5);
Math.max(1, 2, 3);
Math.min(1, 2, 3);
'Hello'.toUpperCase();
'Hello'.toLowerCase();
'Hello World'.split(' ');
'  trim  '.trim();
new Date().toISOString();
new Date().getFullYear();
import fs from 'fs';
fs.readFileSync('file.txt', 'utf8');
fs.writeFileSync('file.txt', 'Hello World');
require('path').join(__dirname, 'file.txt');
import express from 'express';
const app = express();
app.get('/', (req, res) => res.send('Hello World'));
app.listen(3000, () => console.log('Server running on port 3000'));
import { useState } from 'react';
const [count, setCount] = useState(0);
useEffect(() => { console.log('Component mounted'); }, []);
return <div>Hello</div>;
pnpm install
pnpm dev
pnpm build
pnpm start
npm install
npm run dev
npm run build
npm start
yarn install
yarn dev
yarn build
yarn start
tsc --init
tsc
node index.js
nodemon index.js
eslint . --fix
prettier --write .
git init
git add .
git commit -m 'Initial commit'
git push origin main
npx create-react-app my-app
npx create-next-app@latest my-app
npx tsc
vite
npx vite
next dev
next build
next start
deno run --allow-net server.ts
bun install
bun dev
bun run start
rm -rf node_modules && npm install
docker build -t my-app .
docker run -p 3000:3000 my-app
heroku create
heroku push origin main
vercel
netlify deploy
